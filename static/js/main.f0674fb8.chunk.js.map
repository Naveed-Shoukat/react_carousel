{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","React","useState","pointer","setPointer","totalImages","length","maxWidthOfWrapper","useEffect","className","style","width","transform","transition","animationIterationCount","map","image","index","src","alt","type","onClick","prevPointer","AbsPointer","Math","abs","givenImages","App","state","onChangeformInput","event","item","setState","currentTarget","value","this","htmlFor","id","onChange","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0674fb8.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step:number,\n  frameSize:number,\n  itemWidth:number,\n  animationDuration:number,\n  infinite:boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step = 3,\n  frameSize = 3,\n  itemWidth = 130,\n  animationDuration = 1000,\n  infinite = false,\n}) => {\n  const [pointer, setPointer] = React.useState(0);\n  const totalImages = images.length;\n  const maxWidthOfWrapper = itemWidth * frameSize;\n\n  React.useEffect(() => {\n    setPointer(0);\n  }, [frameSize, step]);\n\n  const handlePrev = () => {\n    setPointer(prevPointer => {\n      const AbsPointer = Math.abs(prevPointer);\n\n      if (AbsPointer < totalImages && AbsPointer > step) {\n        return prevPointer + step;\n      }\n\n      return 0;\n    });\n  };\n\n  const handleNext = () => {\n    setPointer(prevPointer => {\n      const AbsPointer = Math.abs(prevPointer) + 1;\n\n      if (AbsPointer < totalImages - step - (frameSize - step)) {\n        return prevPointer - step - (frameSize - step);\n      }\n\n      return -1 * images.length + step + (frameSize - step);\n    });\n  };\n\n  return (\n    <div className=\"Wrapper\">\n      <div\n        className=\"Carousel Wrapper__Carousel\"\n        style={{ width: `${maxWidthOfWrapper}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={\n            {\n              transform: `translateX(${itemWidth * pointer}px)`,\n              transition: `transform ${animationDuration}ms ease`,\n              animationIterationCount: `${infinite}`,\n            }\n          }\n        >\n          {images.map((image, index) => {\n            return (\n              <li\n                key={`${image}`}\n                className=\"Carousel__item\"\n              >\n                <img\n                  src={image}\n                  alt={`${index + 1}`}\n                  style={{ width: `${itemWidth}px` }}\n                />\n              </li>\n            );\n          })}\n        </ul>\n\n        <div className=\"Carousel__btn-wrapper\">\n          <button\n            type=\"button\"\n            className={\n              pointer !== 0\n                ? 'Carousel__btn'\n                : 'Carousel__btn Carousel__btn--disable'\n            }\n            onClick={handlePrev}\n          >\n            &larr;\n          </button>\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            className={\n              pointer !== -1 * images.length + step + (frameSize - step)\n                ? 'Carousel__btn'\n                : 'Carousel__btn Carousel__btn--disable'\n            }\n            onClick={handleNext}\n          >\n            &rarr;\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst givenImages = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\ninterface State {\n  images: string[];\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: givenImages,\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  // Form Input Function\n  onChangeformInput = (\n    event: React.FormEvent<HTMLInputElement>,\n    item: string,\n  ) => {\n    if (item === 'step') {\n      this.setState({ step: +event.currentTarget.value });\n    }\n\n    if (item === 'frameSize') {\n      this.setState({ frameSize: +event.currentTarget.value });\n    }\n\n    if (item === 'itemWidth') {\n      this.setState({ itemWidth: +event.currentTarget.value });\n    }\n\n    if (item === 'animationDuration') {\n      this.setState({ animationDuration: +event.currentTarget.value });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy='title'>\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={false}\n        />\n\n        <h2>Set Controler Values for Carosel</h2>\n        <form className=\"App__form\">\n          <label className=\"App__label\" htmlFor=\"itemId\">\n            ItemWidth:\n            <input\n              className=\"App__input\"\n              id=\"itemId\"\n              type=\"number\"\n              value={this.state.itemWidth}\n              onChange={(event) => this.onChangeformInput(event, 'itemWidth')}\n            />\n          </label>\n\n          <label className=\"App__label\" htmlFor=\"frameId\">\n            FrameSize:\n            <input\n              className=\"App__input\"\n              id=\"frameId\"\n              type=\"number\"\n              value={this.state.frameSize}\n              onChange={(event) => this.onChangeformInput(event, 'frameSize')}\n            />\n          </label>\n\n          <label className=\"App__label\" htmlFor=\"stepId\">\n            Step:\n            <input\n              className=\"App__input\"\n              id=\"stepId\"\n              type=\"number\"\n              value={this.state.step}\n              onChange={(event) => this.onChangeformInput(event, 'step')}\n            />\n          </label>\n\n          <label className=\"App__label\" htmlFor=\"animationId\">\n            AnimationDuration:\n            <input\n              className=\"App__input\"\n              id=\"animationId\"\n              type=\"number\"\n              value={this.state.animationDuration}\n              onChange={(event) => this.onChangeformInput(\n                event,\n                'animationDuration',\n              )}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}